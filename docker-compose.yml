---
networks:
  app-tier:
    driver: bridge

services:
  site-database:
    image: postgres/postgis-debezium:15
    user: postgres
    networks:
      - app-tier
    container_name: site-database
    build:
      context: etl/debezium-postgis/15-3.3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: default
    hostname: site-database
    ports:
      - "5432:5432"
    expose:
      - 5432
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 25s
      retries: 5
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  sites:
    networks:
      - app-tier
    build:
      context: backend
      dockerfile: backend/Dockerfile.local
    container_name: sites
    hostname: sites
    depends_on:
      site-database:
        condition: service_healthy
    links:
      - site-database
    ports:
      - "4007:4007"
    expose:
      - 4007
    volumes:
      - ./backend/:/app:z
      - ./backend/node_modules:/app/node_modules
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4007" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    container_name: frontend
    entrypoint:
      - "sh"
      - "-c"
      - "npm i && npm run start"
    environment:
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
      - BACKEND_URL=backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4000" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: frontend
    image: node:16.14.0-alpine
    ports:
      - "4000:3000"
      - "35729:35729"
    volumes:
      - ./frontend:/app:z
      - /app/node_modules
    working_dir: "/app"
